name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  windows-debug-float:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      # Build your program with the given configuration
      shell: cmd
      run: |
        compile_debug_float.bat

    - name: Test
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      shell: cmd
      run: |
        Ray-it_Debug_float.exe tests

  windows-debug-double:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      # Build your program with the given configuration
      shell: cmd
      run: |
        compile_debug.bat

    - name: Test
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      shell: cmd
      run: |
        Ray-it_Debug.exe tests

  windows-release-float:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      # Build your program with the given configuration
      shell: cmd
      run: |
        compile_release_float.bat

    - name: Test
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      shell: cmd
      run: |
        Ray-it_Release_float.exe tests

  windows-release-double:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      # Build your program with the given configuration
      shell: cmd
      run: |
        compile_release.bat

    - name: Test
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      shell: cmd
      run: |
        Ray-it_Release.exe tests

  ubuntu-debug-float:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      # Build your program with the given configuration
      shell: bash
      run: |
        bash linux_compile_debug_float.sh

    - name: Test
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      shell: bash
      run: |
        ./Ray-it_Debug_float tests

  ubuntu-debug-double:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      # Build your program with the given configuration
      shell: bash
      run: |
        bash linux_compile_debug.sh

    - name: Test
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      shell: bash
      run: |
        ./Ray-it_Debug tests

  ubuntu-release-float:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      # Build your program with the given configuration
      shell: bash
      run: |
        bash linux_compile_release_float.sh

    - name: Test
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      shell: bash
      run: |
        ./Ray-it_Release_float tests

  ubuntu-release-double:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build
      # Build your program with the given configuration
      shell: bash
      run: |
        bash linux_compile_release.sh

    - name: Test
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      shell: bash
      run: |
        ./Ray-it_Release tests

